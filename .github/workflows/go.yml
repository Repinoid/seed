name: Go Docker Compose CI

on:
  push:
    branches: [ "based" ]

env:
  EXTERNAL_PORT: "8100"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # - name: Set up Docker
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker.io
      #     sudo usermod -aG docker $USER
      #     newgrp docker
      #     docker --version

      - name: Set up Docker
        run: |
          # Remove any existing Docker installations
          sudo apt-get remove -y docker docker-engine docker.io containerd runc
          
          # Install prerequisites
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          
          # Add Docker's official GPG key
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          
          # Set up the repository
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          # Install Docker
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          
          # Add current user to docker group
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build with Docker Compose
        run: docker compose build

        # testcontainer тесты, без запуска контейнеров
      - name: Run unit tests
        run: go test -v ./internal/tests/unit

        # предзапуск контейнеров, тесты обращения к работающему серверу 
      - name: Start services and run tests
        run: |
          docker compose up -d
          sleep 10 # Wait for services to start
          
          # Run tests inside container
          docker compose exec -T -e PORTOS="8080" go-server go test -v ./internal/tests/integration
          
          # Run tests outside container
          env PORTOS="8100" go test -v ./internal/tests/integration
          
          docker compose down
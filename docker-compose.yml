services:
  go_db:
    container_name: db_container_name
    # имя образа из которого создастся база данных
    image: postgres
    environment:
      POSTGRES_PASSWORD: parole
      POSTGRES_USER: uname
      POSTGRES_DB: dbase
    ports:
      - target: 5432 
        published: 5432
        protocol: tcp
    healthcheck:
        test: pg_isready
        interval: 10s
        timeout: 5s
        retries: 5        
    volumes:
      - oblbibl:/var/lib/postgresql/data
    networks:
      - localnet

  pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: a@e.e
        PGADMIN_DEFAULT_PASSWORD: p
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      ports:
        - "8100:80"
      depends_on:
        - go_db
      networks:
        - localnet
        

# Server
  go-server:
    container_name: go-server
    # имя создаваемого образа
    #image: iman:1
    image: naeel/iman:latest
    build:
    # путь до докерфайла
      context: ./
    # докерфайл
      dockerfile: ServerDockerFile
    environment:
    # переменные окружения для сервера
    # host= Data Base container_name, user password dbname см.ниже, в описании контейнера базы данных
      DATABASE_DSN:   "host=go_db user=uname password=parole dbname=dbase sslmode=disable"
      ADDRESS:        ":8080"
    ports:
    # published port - внешний, доступ по CURL или HTTP
      - published: 8888
    # порт контейнера. задан в коде server port http.ListenAndServe(":8080", router)
        target: 8080
        protocol: tcp
    # restart: unless-stopped
    networks:
      - localnet
    depends_on:
      - go_db



volumes:
 oblbibl:
 pgadmin_data:

networks:
  localnet:
    driver: bridge

